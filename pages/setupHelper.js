"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_bootstrap_1 = require("react-bootstrap");
const expansions = ["Legendary Hunt", "Mages", "Monster Pack", "Monster Trail", "Skellige", "Stretch Goals"];
function SetupHelper() {
    const [players, setPlayers] = (0, react_1.useState)();
    return ((0, jsx_runtime_1.jsx)(react_bootstrap_1.Container, { children: (0, jsx_runtime_1.jsxs)(react_bootstrap_1.Col, { className: "justify-content-center", children: [(0, jsx_runtime_1.jsx)(react_bootstrap_1.Row, { xs: 1, md: 1, lg: 1, className: "border-4 my-2", children: (0, jsx_runtime_1.jsx)("h1", { className: 'text-center', children: "Setup Helper" }) }), (0, jsx_runtime_1.jsxs)(react_bootstrap_1.Row, { xs: 1, md: 2, lg: 2, className: "border-4", children: [(0, jsx_runtime_1.jsx)(react_bootstrap_1.Col, { id: "setupChoices", children: (0, jsx_runtime_1.jsx)(react_bootstrap_1.Container, { className: "gap-2 tw-bg-slate-700 rounded-lg drop-shadow", children: (0, jsx_runtime_1.jsx)(react_bootstrap_1.Stack, { gap: 3, children: (0, jsx_runtime_1.jsxs)(react_bootstrap_1.Form, { children: [(0, jsx_runtime_1.jsxs)(react_bootstrap_1.FormGroup, { controlId: "PlayerSelect", children: [(0, jsx_runtime_1.jsx)("h5", { children: "Select players" }), (0, jsx_runtime_1.jsx)("div", { className: "mb-3", children: [1, 2, 3, 4, 5].map((num) => ((0, jsx_runtime_1.jsx)(react_bootstrap_1.FormCheck, { inline: true, type: "radio", name: "group1", id: `${num}Player`, label: num }))) }, "inlinePlayers")] }), (0, jsx_runtime_1.jsxs)(react_bootstrap_1.FormGroup, { controlId: "expansionPicker", children: [(0, jsx_runtime_1.jsx)("h5", { children: "Select your expansions" }), (0, jsx_runtime_1.jsx)("div", { className: "mb-3", children: expansions.map((exp) => ((0, jsx_runtime_1.jsx)(react_bootstrap_1.FormCheck, { name: "group2", id: exp, label: exp }))) }, "inlineExpansions")] })] }) }) }) }), (0, jsx_runtime_1.jsx)(react_bootstrap_1.Col, { id: "setupResults", children: (0, jsx_runtime_1.jsx)(react_bootstrap_1.Container, { children: (0, jsx_runtime_1.jsxs)(react_bootstrap_1.Stack, { gap: 3, children: [(0, jsx_runtime_1.jsx)("div", { children: "item 1" }), (0, jsx_runtime_1.jsx)("div", { children: "item 2" }), (0, jsx_runtime_1.jsx)("div", { children: "item 3" })] }) }) })] })] }) }));
}
exports.default = SetupHelper;
